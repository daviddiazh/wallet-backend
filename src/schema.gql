# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AccountGQL {
  _id: ID!
  userId: ID!
  userEmail: String!
  balance: Int!
  credit: Int!
  state: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AccountGQLFBUI {
  _id: ID!
  userId: ID!
  userEmail: String!
  balance: String!
  credit: Int!
  state: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type MovementsList {
  _id: ID!
  accountId_Income: ID!
  accountId_Outcome: ID!
  reason: String!
  amount: String!
  fees: Float!
  createdAt: DateTime!
}

type Movement {
  _id: ID!
  accountId_Income: ID!
  accountId_Outcome: ID!
  reason: String!
  amount: Int!
  fees: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type User {
  _id: ID!
  id: ID!
  fullName: String!
  phone: Int!
  email: String!
  password: String
  clientState: Int!
  profilePicture: String!
}

type Query {
  findById(id: ID!): AccountGQLUnion!
  findByUserId(id: ID!): AccountGQLFBUIUnion!
  findByUserEmail(email: String!): AccountGQLFBUI!
  myMovementsByAccountId(id: String!): [MovementsList!]!
  findUserById(id: String!): User!
  findUserByEmail(email: String!): User!
  checkToken(token: String!): AuthUnion!
}

union AccountGQLUnion = AccountGQL | StatusError

type StatusError {
  code: Int!
  title: String!
  description: String!
}

union AccountGQLFBUIUnion = AccountGQLFBUI | StatusError

union AuthUnion = SignUpOrLogin | StatusError

type SignUpOrLogin {
  user: User!
  token: String!
}

type Mutation {
  updateBalance(updateBalance: UpdateBalanceDto!): AccountGQL!
  requestCredit(requestCredit: RequestCreditDto!): RequestCreditUnion!
  moneyTransfer(moneyTransfer: MoneyTransferDto!): MoneyTransferUnion!
  signUp(signUp: SignUpDto!): AuthUnion!
  login(login: LoginDtoGQL!): AuthUnion!
}

input UpdateBalanceDto {
  accountId: ID!
  newBalance: Int!
}

union RequestCreditUnion = RequestCredit | StatusError

type RequestCredit {
  movement: Movement!
  updateBalance: AccountGQL!
}

input RequestCreditDto {
  accountId_Income: ID!
  amount: Int!
  reason: String!
}

union MoneyTransferUnion = MoneyTransfer | StatusError

type MoneyTransfer {
  movement: Movement!
  savedBalanceIncome: AccountGQL!
  savedBalanceOutcome: AccountGQL!
}

input MoneyTransferDto {
  accountId_Income: ID!
  accountId_Outcome: ID!
  reason: String!
  amount: Int!
}

input SignUpDto {
  fullName: String!
  email: String!
  password: String!
  phone: Int!
  clientState: Int
  profilePicture: String
}

input LoginDtoGQL {
  email: String!
  password: String!
}